<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
<title>Pygame</title>
<meta  http-equiv="Content-Type" content="text/html;charset=utf-8" />
<meta  name="generator" content="Org-mode" />
<link rel="stylesheet" type="text/css" href="css/styles.css"/>
<link href='https://fonts.googleapis.com/css?family=Ubuntu+Mono|Ubuntu' rel='stylesheet' type='text/css'>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js" type="text/javascript"></script>
<script src="js/navbar.js" type="text/javascript"></script>
<script type="text/javascript">
/*
@licstart  The following is the entire license notice for the
JavaScript code in this tag.

Copyright (C) 2012-2013 Free Software Foundation, Inc.

The JavaScript code in this tag is free software: you can
redistribute it and/or modify it under the terms of the GNU
General Public License (GNU GPL) as published by the Free Software
Foundation, either version 3 of the License, or (at your option)
any later version.  The code is distributed WITHOUT ANY WARRANTY;
without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE.  See the GNU GPL for more details.

As additional permission under GNU GPL version 3 section 7, you
may distribute non-source (e.g., minimized or compacted) forms of
that code without the copy of the GNU GPL normally required by
section 4, provided you include this license notice and a URL
through which recipients can access the Corresponding Source.


@licend  The above is the entire license notice
for the JavaScript code in this tag.
*/
<!--/*--><![CDATA[/*><!--*/
 function CodeHighlightOn(elem, id)
 {
   var target = document.getElementById(id);
   if(null != target) {
     elem.cacheClassElem = elem.className;
     elem.cacheClassTarget = target.className;
     target.className = "code-highlighted";
     elem.className   = "code-highlighted";
   }
 }
 function CodeHighlightOff(elem, id)
 {
   var target = document.getElementById(id);
   if(elem.cacheClassElem)
     elem.className = elem.cacheClassElem;
   if(elem.cacheClassTarget)
     target.className = elem.cacheClassTarget;
 }
/*]]>*///-->
</script>
</head>
<body>
<div id="content">
<h1 class="title">Pygame</h1>
  <div class="github-fork-ribbon-wrapper left">
    <div class="github-fork-ribbon">
      <a href="https://github.com/stsb11/9-CS-pyGame.git">Fork me on GitHub</a>
    </div>
  </div>
<div id="stickyribbon">
    <ul>
      <li><a href="1_Lesson.html">Week1</a></li>
      <li><a href="2_Lesson.html">Week2</a></li>
      <li><a href="3_Lesson.html">Week3</a></li>
      <li><a href="4_Lesson.html">Week4</a></li>
      <li><a href="5_Lesson.html">Week5</a></li>
      <li><a href="6_Lesson.html">Week6</a></li>
      <li><a href="7_Lesson.html">Week7</a></li>
      <li><a href="8_Lesson.html">Week8</a></li>
      <li><a href="9_Lesson.html">Week9</a></li>
      <li><a href="assessment.html">Assessment</a></li>
    </ul>
  </div>
<div id="outline-container-sec-1" class="outline-2 activity">
<h2 id="sec-1">Introduction</h2>
<div class="outline-text-2" id="text-1">
</div>
<div id="outline-container-sec-1-1" class="outline-3 learn">
<h3 id="sec-1-1">Learn It</h3>
<div class="outline-text-3" id="text-1-1">
<ul class="org-ul">
<li>Pygame is a cross-platform set of Python modules designed for creating 2D games. The modules are designed to be simple, easy to use, and funâ€”a key part of Pygame's ideology.
</li>
<li>You can read more over at <a href="http://www.pygame.org/">http://www.pygame.org/</a>
</li>
<li>Pygame was first released in 2000 and has a large community of developers. Have a look at the <a href="http://www.pygame.org/hifi.html">Awesome</a> section of the web site.  
</li>
<li>Pygame requires several line of code to get things up and running, this has been provided for you in the form of a template to use of all your pygame projects.
</li>
</ul>

<div class="figure">
<p><img src="./img/1-1.png" alt="1-1.png" />
</p>
</div>
</div>
</div>
<div id="outline-container-sec-1-2" class="outline-3 code">
<h3 id="sec-1-2">Code It: Template</h3>
<div class="outline-text-3" id="text-1-2">
<ul class="org-ul">
<li>Create a folder called <code>pygameIntro</code>.
</li>
<li>Create a new project using pycharm called <code>pygameCode</code> in the <code>pygameIntro</code> folder.
</li>
<li>Download the template <b>pygame</b> to your <code>pygameIntro</code> folder as <code>basicShapes.py</code>
</li>
</ul>
<p>
<a href="./doc/pygameDevTemplate.py">Click here for the template</a> 
</p>

<ul class="org-ul">
<li>The template has two main sections:
<ul class="org-ul">
<li>Game Setup: runs once when the game loads
</li>
<li>Game loop: runs again and again (loops) 60 times a second
</li>
</ul>
</li>
<li>We'll start by making some changes to the game loop, to get to grips with drawing basic graphics. Once we're happy with doing this, we can start to animate them.
</li>
</ul>
</div>
</div>
<div id="outline-container-sec-1-3" class="outline-3 run">
<h3 id="sec-1-3">Run It</h3>
<div class="outline-text-3" id="text-1-3">
<ul class="org-ul">
<li>Firstly, you'll need to set up pyCharm to work on your computer. 
</li>
</ul>
<iframe width="420" height="315" src="https://www.youtube.com/embed/Qj5PQbwy9tA" frameborder="0" allowfullscreen></iframe>
<ul class="org-ul">
<li>With the template loaded in pyCharm, we need to test that everything is working. 
</li>
<li>Run the template file by either using <code>Shift-F10</code> or clicking the green 'play' icon in the top right-hand corner.
</li>
<li>After a few seconds, you should see the computer create a new window that is black, 1000 * 800 pixels and closes when you tell it to. 
</li>
</ul>
</div>
</div>
<div id="outline-container-sec-1-4" class="outline-3 learn">
<h3 id="sec-1-4">Learn It: Screen Geometry</h3>
<div class="outline-text-3" id="text-1-4">
<ul class="org-ul">
<li>Unlike Scratch, Pygame and most professional game engines have the origin <code>x = 0</code>, <code>y = 0</code> at the top left hand corner.
</li>
</ul>

<div class="figure">
<p><img src="./img/1-2.png" alt="1-2.png" />
</p>
</div>
<ul class="org-ul">
<li>In the image above, a pixel has been placed at x=30, y=40.
</li>
</ul>
</div>
</div>
<div id="outline-container-sec-1-5" class="outline-3 program">
<h3 id="sec-1-5">Program It</h3>
<div class="outline-text-3" id="text-1-5">
<ul class="org-ul">
<li>Pygame has several built-in shapes that you can draw using simple commands.
</li>
<li>The <code>.draw.rect()</code> command lets you draw a rectangle on the display. It needs a few pieces of information to be able to do this first, which are placed in brackets. We call these <b>parameters</b>. 
<ul class="org-ul">
<li>In theory you could have lots of graphics windows open. We've only got one, which we've called <code>screen</code>. We need to tell pyGame that this is where the shape is to be drawn.
</li>
<li>We can draw lines and shapes in any of 16.7 million colours. Our code has a few set up for convenient access. In the example below, we're using a colour we've called <code>green</code>. 
</li>
</ul>
</li>
<li>Next, there are four numbers. Let's look at that a little bit
<ul class="org-ul">
<li>We need to state exactly where on the <code>screen</code> windows we'd like to start drawing the rectangle from. The first two digits (50,200) tell pyGame that we want to start drawing 50 pixels from the left edge, and 200px from the top of the screen. 
</li>
<li>To draw a rectangle, we also need to state the width (40px in this case) and the height (20px) that we want our shape to be. 
</li>
</ul>
</li>
</ul>

<div class="figure">
<p><img src="./img/1-rect.png" alt="1-rect.png" />
</p>
</div>
<ul class="org-ul">
<li>We can draw several other basic shapes too, such as circles. 
</li>
<li>The idea is much the same, as you can see below.
</li>
</ul>

<div class="figure">
<p><img src="./img/1-circle.png" alt="1-circle.png" />
</p>
</div>
<ul class="org-ul">
<li>Lines are also possible&#x2026;
</li>
</ul>

<div class="figure">
<p><img src="./img/1-line.png" alt="1-line.png" />
</p>
</div>
</div>
</div>

<div id="outline-container-sec-1-6" class="outline-3 try">
<h3 id="sec-1-6">Try It</h3>
<div class="outline-text-3" id="text-1-6">
<ul class="org-ul">
<li>In your pyCharm code, scroll down to line that says, <code>your code starts here</code>, located about two thirds of the way down the page. 
</li>
<li>Copy and paste the line below underneath this line
</li>
</ul>
<div class="org-src-container">

<pre class="src src-python">pygame.draw.rect(screen, green, (50, 200, 40, 20))
# pygame.draw.rect(screen, colour, (x, y, width, height), thickness)
pygame.draw.rect(screen, yellow, (50, 400, 40, 20), 4)
# thickness is optional filled shape if specified
</pre>
</div>
<ul class="org-ul">
<li>When done, your screen should look like this:
</li>
</ul>

<div class="figure">
<p><img src="./img/1-3.PNG" alt="1-3.PNG" />
</p>
</div>
<ul class="org-ul">
<li>Run the code with <code>Shift-F10</code>
</li>
<li>What does the extra 4 at the end do?
</li>
<li>Let's try something else. Remove the lines you wrote previously, and replace them with these and run the program. Make sure they're indented into the page.
</li>
</ul>
<div class="org-src-container">

<pre class="src src-python">pygame.draw.circle(screen, white, (300, 600), 20)
# pygame.draw.circle(screen, colour, (x, y), radius, thickness)
pygame.draw.circle(screen, yellow, (400, 700), 20, 4)
</pre>
</div>
<ul class="org-ul">
<li>Your code should look like this:
</li>
</ul>

<div class="figure">
<p><img src="./img/1-4.PNG" alt="1-4.PNG" />
</p>
</div>
<ul class="org-ul">
<li>Let's try one more. Replace your circle code with these lines.
</li>
<li>Run them - what do you think the different parameters are doing?
</li>
</ul>
<div class="org-src-container">

<pre class="src src-python">pygame.draw.line(screen, green, (0, 0), (200, 200))
# pygame.draw.line(screen, colour, (startX, startY), (endX, endY), thickness)
pygame.draw.line(screen, green, (0, 0), (800, 200), 4)
</pre>
</div>
<ul class="org-ul">
<li>Your code should look like this when you're done:
</li>
</ul>

<div class="figure">
<p><img src="./img/1-5.PNG" alt="1-5.PNG" />
</p>
</div>
</div>
</div>
<div id="outline-container-sec-1-7" class="outline-3 badge">
<h3 id="sec-1-7">Badge It</h3>
<div class="outline-text-3" id="text-1-7">
<ul class="org-ul">
<li>For this lessonâ€™s assessment you are marking your own work. This will allow you see your own progress. This process is often used for online training programmes and is called the â€˜honourâ€™ or â€˜trust systemâ€™. Obviously the key to these systems is being honest. Your teacher will randomly check some students work to moderate their marking.
<ul class="org-ul">
<li><b>Silver</b>:  Can you draw a car or house using code made from rectangles, circles and lines?
</li>
<li><b>Gold</b>: Can you add comments below your code from the silver task, explaining in your own words how RGB colours work?
</li>
<li><b>Platinum</b>: Can you create two variables to store two new colours? Have you researched how to draw the shapes ellipse and polygon? Can you draw examples of them both shapes using your two new colours.
</li>
</ul>
</li>
<li>Once you have done above tasks and tested they are working as intended, click <a href="https://www.bournetolearn.com/quizzes/y9-gameDev/Lesson_1">here</a> for the self assessment.
</li>
</ul>
</div>
</div>
<div id="outline-container-sec-1-8" class="outline-3 badge">
<h3 id="sec-1-8">Badge It</h3>
<div class="outline-text-3" id="text-1-8">
<ul class="org-ul">
<li>This is Mr Stewart having a play with EMACS
<ul class="org-ul">
<li><b>Silver</b>: Can I add content?
</li>
<li><b>Gold</b>: Can you get the CSS working? 
</li>
<li><b>Platinum</b>: Is Mrs Ellis Impressed?
</li>
</ul>
</li>
</ul>
</div>
</div>
</div>
</div>
<div id="postamble" class="status">
<p class="validation"><a href="http://validator.w3.org/check?uri=referer">Validate</a></p>
</div>
</body>
</html>
